// /**
// * This code was generated by v0 by Vercel.
// * @see https://v0.dev/t/Ks22qlDsUPI
// * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
// */

// /** Add fonts into your Next.js project:

// import { Cormorant_Garamond } from 'next/font/google'
// import { Prata } from 'next/font/google'

// cormorant_garamond({
//   subsets: ['latin'],
//   display: 'swap',
// })

// prata({
//   subsets: ['latin'],
//   display: 'swap',
// })

// To read more about using these font, please visit the Next.js documentation:
// - App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
// - Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
// **/
// import { Button } from "@/components/ui/button"
// import { CardContent, Card } from "@/components/ui/card"
// import Link from "next/link"
// import { useState } from 'react';

// export function Wikigolflayoout(props:any) {
  
//   const [inputValue, setInputValue] = useState('');
//   const [displayValue, setDisplayValue] = useState('');
//   const [buttonClicked, setButtonClicked] = useState(false);

//   const handleInputChange = (event: any) => {
//     event.preventDefault();
//     setInputValue(event.target.value);
//     console.log(displayValue);
//   };

//   const handleButtonClick = (event: any) => {
//     event.preventDefault();
//     setDisplayValue(inputValue);
//     setButtonClicked(true); 
//     console.log(displayValue);
//   };

//   return (
//   <>
//   <h1 className=" text-white sm:text-4xl md:text-5xl lg:text-6xl/none text-3xl"><span className=" text-gray-400">ゴール：</span>{displayValue}</h1>
//     <div className="flex">
//       <input className="block p-2.5 w-full z-20 text-sm text-gray-900 bg-gray-50 rounded-e-lg rounded-s-gray-100 rounded-s-2 border border-gray-300 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:border-blue-500"  type="text" value={inputValue} onChange={handleInputChange} disabled={buttonClicked}/>
      
//       <Button
//         className="border-green-400 text-green-400 hover:bg-green-400 hover:text-black"
//         variant="secondary"
//         onClick={handleButtonClick}
//         disabled={buttonClicked}
//       >
//         Learn More
//       </Button>
//     </div>
//     </>
//   );
// }


import { useState, ChangeEvent } from 'react';

const MyForm: React.FC = () => {
  const [inputValue, setInputValue] = useState<string>('');
  const [displayValues, setDisplayValues] = useState<string[]>([]);

  const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {
    setInputValue(event.target.value);
  };

  const handleButtonClick = () => {
    if (inputValue.trim() === '') {
      alert('入力フィールドが空です。値を入力してください。');
      return;
    }
    setDisplayValues([...displayValues, inputValue]);
    setInputValue(''); // 入力フィールドをクリア
  };

  return (
    <div>
      <input type="text" value={inputValue} onChange={handleInputChange} />
      <button type="button" onClick={handleButtonClick}>Display Value</button>
      <h1>{displayValues.join(' → ')}</h1>
    </div>
  );
}

export default MyForm;
